{"version":3,"sources":["trt_logo.png","AudioPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["AudioPlayer","props","state","status","error","fetch","then","response","setState","this","console","log","controls","id","src","type","React","Component","App","className","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,G,MAAA,IAA0B,sC,iDCsE1BA,M,kDAjEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,KACRC,MAAO,MAJQ,E,qDAOnB,WAAqB,IAAD,OAClBC,MAAM,qDACHC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZL,OAAQI,EAASJ,c,oBAKvB,WAAU,IACAA,EAAWM,KAAKP,MAAhBC,OAER,OADAO,QAAQC,IAAIR,GACG,MAAXA,EAwCN,uBAAOS,UAAQ,EAACC,GAAG,gBAAnB,SACE,wBAAQC,IAAI,oDAAoDC,KAAK,iBAvC/C,MAAXZ,EACF,yEAGL,iD,GA1BgBa,IAAMC,WCgBjBC,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKL,IAAKM,EAAMD,UAAU,WAAWE,IAAI,SACzC,mEAGA,cAAC,EAAD,UCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.36479fe7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trt_logo.fa883c72.png\";","import React from 'react';\n// import $ from 'jquery';\n// import AudioAnalyser from \"react-audio-analyser\"\n\nclass AudioPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: null,\n      error: null\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://theravetheory.evan-savage.com:8000/stream\")\n      .then((response) => {\n        this.setState({\n          status: response.status,\n        });\n      })\n\n    }\n    render() {\n      const { status } = this.state;\n      console.log(status);\n      if (status === 200) {\n        return audioEmbed();\n      } else if (status === 404) {\n        return <p> The stream is not available currently. </p>;\n      } else {\n        return (\n          <p> Loading... </p>\n        );\n      }\n    }\n\n}\n\n// function checkHttpStatus(url) {\n//     // $.ajax({\n//     //     type: \"GET\",\n//     //     data: {},\n//     //     url: url,\n//     //     error: function(response) {\n//     //         console.log('yes');\n//     //         return 0\n//     //     },\n//     //     success: function(response) {\n//     //       return 1\n//     //     }\n//     // });\n//     var myRequest = new Request(url)\n//     fetch(myRequest).then(function(response) {\n//         console.log(response.status);\n//         if (response.status === 200) {\n//           return\n//         } else {\n//           return <p> No stream available at this time. </p>\n//         }\n//\n//     })\n// }\n\nfunction audioEmbed(props) {\n  return (\n    <audio controls id=\"stream-player\">\n      <source src=\"https://theravetheory.evan-savage.com:8000/stream\" type=\"audio/mpeg\"></source>\n    </audio>\n  )\n}\n\nexport default AudioPlayer;\n","import logo from './trt_logo.png';\nimport './Fonts.css';\nimport './App.css';\nimport AudioPlayer from './AudioPlayer.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          The Rave Theory radio coming soon.\n        </p>\n        <AudioPlayer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}