{"version":3,"sources":["trt_logo.png","play.svg","Play.js","pause.svg","Pause.js","PlayPause.js","useAudioPlayer.js","AudioPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["Play","onPlayerClick","className","onClick","src","playbutton","alt","pausebutton","PlayPause","props","handlePlayerClick","state","playing","setState","$","pause","play","this","Component","useAudioPlayer","useState","setPlaying","useEffect","audio","document","getElementById","setAudioData","addEventListener","removeEventListener","AudioEmbed","controls","id","type","isplaying","AudioPlayer","status","error","serverName","serverDescription","serverGenre","fetch","streamurl","then","response","console","log","getJSON","url","success","data","xhr","icestats","source","server_name","server_description","genre","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2c3682b9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trt_logo.fa883c72.png\";","export default __webpack_public_path__ + \"static/media/play.75768279.svg\";","import React from \"react\";\nimport playbutton from './play.svg';\nimport $ from 'jquery';\n\nexport default function Play({onPlayerClick}) {\n  return (\n    <button className=\"player__button\" onClick={onPlayerClick}>\n      <img src={playbutton} alt=\"play button\"/>\n    </button>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pause.548b8b6c.svg\";","import React from \"react\";\nimport pausebutton from './pause.svg';\nimport $ from 'jquery';\n\nexport default function Play({onPlayerClick}) {\n  return (\n    <button className=\"player__button\" onClick={onPlayerClick}>\n      <img src={pausebutton} alt=\"pause button\" />\n    </button>\n  );\n}\n","import React, {Component} from 'react'\nimport Play from './Play.js';\nimport Pause from './Pause.js';\nimport $ from 'jquery';\n\nexport default class PlayPause extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      playing: false\n    }\n  }\n\n  handlePlayerClick = () => {\n    if (!this.state.playing) {\n      this.setState({playing: true});\n      $('#stream-player')[0].play();\n    } else {\n      this.setState({playing: false});\n      $('#stream-player')[0].pause();\n    }\n  }\n\n  render() {\n    return (\n      <>\n      {\n        this.state.playing? <Pause onPlayerClick={this.handlePlayerClick} /> : <Play onPlayerClick={this.handlePlayerClick} />\n      }\n      </>\n    )\n  }\n}\n","import { useState, useEffect } from \"react\";\n\nfunction useAudioPlayer() {\n  // const [duration, setDuration] = useState();\n  // const [setCurTime] = useState();\n  const [playing, setPlaying] = useState(false);\n  // const [clickedTime, setClickedTime] = useState();\n\n  useEffect(() => {\n    const audio = document.getElementById(\"stream-player\");\n\n    // state setters wrappers\n    const setAudioData = () => {\n      // setDuration(audio.duration);\n      // setCurTime(audio.currentTime);\n    }\n\n    // const setAudioTime = () => setCurTime(audio.currentTime);\n\n    // DOM listeners: update React state on DOM events\n    audio.addEventListener(\"loadeddata\", setAudioData);\n\n    // audio.addEventListener(\"timeupdate\", setAudioTime);\n\n    // React state listeners: update DOM on React state changes\n    playing ? audio.play() : audio.pause();\n\n    // if (clickedTime && clickedTime !== curTime) {\n    //   audio.currentTime = clickedTime;\n    //   setClickedTime(null);\n    // }\n\n    // effect cleanup\n    return () => {\n      audio.removeEventListener(\"loadeddata\", setAudioData);\n      // audio.removeEventListener(\"timeupdate\", setAudioTime);\n    }\n  });\n\n  return {\n    // curTime,\n    // duration,\n    playing,\n    setPlaying,\n    // setClickedTime\n  }\n}\n\nexport default useAudioPlayer;\n","import React, {Component} from 'react';\nimport $ from 'jquery';\n// import ReactDOM from 'react-dom';\nimport PlayPause from './PlayPause.js';\nimport useAudioPlayer from './useAudioPlayer.js';\nimport equal from 'fast-deep-equal';\n\n\nfunction AudioEmbed() {\n  const { playing, setPlaying } = useAudioPlayer();\n  const isplaying = false;\n  return (\n    <>\n    <audio controls id=\"stream-player\">\n      <source src=\"https://theravetheory.evan-savage.com:8000/stream\" type=\"audio/mpeg\"></source>\n    </audio>\n    <div className=\"scroll-left\">\n      <p>This is a test</p>\n    </div>\n    <div className=\"player-controls\">\n      <PlayPause isplaying={isplaying}/>\n    </div>\n    </>\n  );\n}\n\nexport default class AudioPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: null,\n      error: null,\n      serverName: null,\n      serverDescription: null,\n      serverGenre: null,\n    };\n  }\n  componentDidMount() {\n    fetch(this.props.streamurl + \"/stream\")\n    .then((response) => {\n      this.setState({\n        status: response.status,\n      });\n      console.log('stream', this.state);\n    });\n    $.getJSON({\n      url: this.props.streamurl + \"/status-json.xsl\",\n      success: (data, status, xhr) => {\n        console.log(xhr)\n        if (data.icestats.source) {\n          this.setState({\n            serverName: data.icestats.source.server_name,\n            serverDescription: data.icestats.source.server_description,\n            serverGenre: data.icestats.source.genre,\n          });\n        }\n      },\n      error: function(data) {\n        console.log('there was an error');\n      }\n    });\n  }\n\n  render() {\n    const status = this.state.status;\n\n    // console.log(element);\n    if (status === 200) {\n      return (\n        <AudioEmbed/>\n      )\n    } else if (status === 404) {\n      return <p> The stream is not available currently. </p>;\n    } else {\n      return (\n        <p> Loading... </p>\n      );\n    }\n  }\n\n}\n","import logo from './trt_logo.png';\nimport './Fonts.css';\nimport './App.scss';\nimport './Scroll.scss';\nimport AudioPlayer from './AudioPlayer.js';\n\n\nfunction App() {\n  const stream_url = \"https://theravetheory.evan-savage.com:8000\";\n  return (\n    <div className=\"app-wrapper\">\n      <div className=\"nav-wrapper\">\n        <nav className=\"navbar\">\n          <div className=\"icon-container\">\n          </div>\n          <AudioPlayer streamurl={stream_url}/>\n        </nav>\n      </div>\n      <div>\n        <header className=\"App-header\">\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}