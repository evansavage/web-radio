{"version":3,"sources":["trt_logo.png","play.svg","Play.js","pause.svg","Pause.js","useAudioPlayer.js","AudioPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["Play","props","handleClick","className","onClick","src","playbutton","alt","pausebutton","useAudioPlayer","useState","playing","setPlaying","useEffect","audio","document","getElementById","setAudioData","addEventListener","play","pause","removeEventListener","AudioPlayer","state","status","error","serverName","serverDescription","serverGenre","fetch","this","streamurl","then","response","setState","console","log","$","getJSON","url","success","data","xhr","icestats","source","server_name","server_description","genre","AudioEmbed","Component","controls","id","type","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qPAAe,I,6DCAA,MAA0B,iC,OCG1B,SAASA,EAAKC,GAAQ,IAC3BC,EAAgBD,EAAhBC,YAER,OACE,wBAAQC,UAAU,iBAAiBC,QAAS,kBAAMF,KAAlD,SACE,qBAAKG,IAAKC,EAAYC,IAAI,kBCRjB,UAA0B,kCCG1B,SAASP,EAAKC,GAAQ,IAC3BC,EAAgBD,EAAhBC,YAER,OACE,wBAAQC,UAAU,iBAAiBC,QAAS,kBAAMF,KAAlD,SACE,qBAAKG,IAAKG,EAAaD,IAAI,mB,WCwClBE,MA9Cf,WAA0B,MAGMC,oBAAS,GAHf,mBAGjBC,EAHiB,KAGRC,EAHQ,KAqCxB,OA/BAC,qBAAU,WACR,IAAMC,EAAQC,SAASC,eAAe,iBAGhCC,EAAe,aAqBrB,OAbAH,EAAMI,iBAAiB,aAAcD,GAKrCN,EAAUG,EAAMK,OAASL,EAAMM,QAQxB,WACLN,EAAMO,oBAAoB,aAAcJ,OAKrC,CAGLN,UACAC,eCpCiBU,E,kDACnB,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,MAAQ,CACXC,OAAQ,KACRC,MAAO,KACPC,WAAY,KACZC,kBAAmB,KACnBC,YAAa,MAPE,E,qDAUnB,WAAqB,IAAD,OAClBC,MAAMC,KAAK7B,MAAM8B,UAAY,WAC5BC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZV,OAAQS,EAAST,SAEnBW,QAAQC,IAAI,SAAU,EAAKb,UAE7Bc,IAAEC,QAAQ,CACRC,IAAKT,KAAK7B,MAAM8B,UAAY,mBAC5BS,QAAS,SAACC,EAAMjB,EAAQkB,GACtBP,QAAQC,IAAIM,GACRD,EAAKE,SAASC,QAChB,EAAKV,SAAS,CACZR,WAAYe,EAAKE,SAASC,OAAOC,YACjClB,kBAAmBc,EAAKE,SAASC,OAAOE,mBACxClB,YAAaa,EAAKE,SAASC,OAAOG,SAIxCtB,MAAO,SAASgB,GACdN,QAAQC,IAAI,2B,oBAKlB,WACE,IAAMZ,EAASM,KAAKP,MAAMC,OAG1B,OAAe,MAAXA,EAEA,cAACwB,EAAD,IAEkB,MAAXxB,EACF,yEAGL,iD,GAjDiCyB,aAwDzC,SAASD,IAAc,IAAD,EACYvC,IAAxBE,EADY,EACZA,QAASC,EADG,EACHA,WACjB,OACE,qCACA,uBAAOsC,UAAQ,EAACC,GAAG,gBAAnB,SACE,wBAAQ9C,IAAI,oDAAoD+C,KAAK,iBAEvE,qBAAKjD,UAAU,cAAf,SACE,iDAEF,qBAAKA,UAAU,kBAAf,SACGQ,EACC,cAAC,EAAD,CAAOT,YAAa,kBAAMU,GAAW,MACrC,cAACZ,EAAD,CAAME,YAAa,kBAAMU,GAAW,WClD7ByC,MAnBf,WAEE,OACE,sBAAKlD,UAAU,cAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAEf,cAAC,EAAD,CAAa4B,UAPF,oDAUf,8BACE,wBAAQ5B,UAAU,qBCPXmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASC,eAAe,SAM1BsC,M","file":"static/js/main.6e87cc83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trt_logo.fa883c72.png\";","export default __webpack_public_path__ + \"static/media/play.75768279.svg\";","import React from \"react\";\nimport playbutton from './play.svg';\n\nexport default function Play(props) {\n  const { handleClick } = props;\n\n  return (\n    <button className=\"player__button\" onClick={() => handleClick()}>\n      <img src={playbutton} alt=\"play button\"/>\n    </button>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/pause.548b8b6c.svg\";","import React from \"react\";\nimport pausebutton from './pause.svg';\n\nexport default function Play(props) {\n  const { handleClick } = props;\n\n  return (\n    <button className=\"player__button\" onClick={() => handleClick()}>\n      <img src={pausebutton} alt=\"pause button\" />\n    </button>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nfunction useAudioPlayer() {\n  // const [duration, setDuration] = useState();\n  // const [setCurTime] = useState();\n  const [playing, setPlaying] = useState(false);\n  // const [clickedTime, setClickedTime] = useState();\n\n  useEffect(() => {\n    const audio = document.getElementById(\"stream-player\");\n\n    // state setters wrappers\n    const setAudioData = () => {\n      // setDuration(audio.duration);\n      // setCurTime(audio.currentTime);\n    }\n\n    // const setAudioTime = () => setCurTime(audio.currentTime);\n\n    // DOM listeners: update React state on DOM events\n    audio.addEventListener(\"loadeddata\", setAudioData);\n\n    // audio.addEventListener(\"timeupdate\", setAudioTime);\n\n    // React state listeners: update DOM on React state changes\n    playing ? audio.play() : audio.pause();\n\n    // if (clickedTime && clickedTime !== curTime) {\n    //   audio.currentTime = clickedTime;\n    //   setClickedTime(null);\n    // }\n\n    // effect cleanup\n    return () => {\n      audio.removeEventListener(\"loadeddata\", setAudioData);\n      // audio.removeEventListener(\"timeupdate\", setAudioTime);\n    }\n  });\n\n  return {\n    // curTime,\n    // duration,\n    playing,\n    setPlaying,\n    // setClickedTime\n  }\n}\n\nexport default useAudioPlayer;\n","import React, {Component} from 'react';\nimport $ from 'jquery';\n// import ReactDOM from 'react-dom';\nimport Play from './Play.js';\nimport Pause from './Pause.js';\nimport useAudioPlayer from './useAudioPlayer.js';\n\nexport default class AudioPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: null,\n      error: null,\n      serverName: null,\n      serverDescription: null,\n      serverGenre: null,\n    };\n  }\n  componentDidMount() {\n    fetch(this.props.streamurl + \"/stream\")\n    .then((response) => {\n      this.setState({\n        status: response.status,\n      });\n      console.log('stream', this.state);\n    });\n    $.getJSON({\n      url: this.props.streamurl + \"/status-json.xsl\",\n      success: (data, status, xhr) => {\n        console.log(xhr)\n        if (data.icestats.source) {\n          this.setState({\n            serverName: data.icestats.source.server_name,\n            serverDescription: data.icestats.source.server_description,\n            serverGenre: data.icestats.source.genre,\n          });\n        }\n      },\n      error: function(data) {\n        console.log('there was an error');\n      }\n    });\n  }\n\n  render() {\n    const status = this.state.status;\n\n    // console.log(element);\n    if (status === 200) {\n      return (\n        <AudioEmbed/>\n      )\n    } else if (status === 404) {\n      return <p> The stream is not available currently. </p>;\n    } else {\n      return (\n        <p> Loading... </p>\n      );\n    }\n  }\n\n}\n\nfunction AudioEmbed() {\n  const { playing, setPlaying } = useAudioPlayer();\n  return (\n    <>\n    <audio controls id=\"stream-player\">\n      <source src=\"https://theravetheory.evan-savage.com:8000/stream\" type=\"audio/mpeg\"></source>\n    </audio>\n    <div className=\"scroll-left\">\n      <p>This is a test</p>\n    </div>\n    <div className=\"player-controls\">\n      {playing ?\n        <Pause handleClick={() => setPlaying(false)} /> :\n        <Play handleClick={() => setPlaying(true)} />\n      }\n    </div>\n    </>\n  );\n}\n","import logo from './trt_logo.png';\nimport './Fonts.css';\nimport './App.scss';\nimport './Scroll.scss';\nimport AudioPlayer from './AudioPlayer.js';\n\n\nfunction App() {\n  const stream_url = \"https://theravetheory.evan-savage.com:8000\";\n  return (\n    <div className=\"app-wrapper\">\n      <div className=\"nav-wrapper\">\n        <nav className=\"navbar\">\n          <div className=\"icon-container\">\n          </div>\n          <AudioPlayer streamurl={stream_url}/>\n        </nav>\n      </div>\n      <div>\n        <header className=\"App-header\">\n        </header>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}